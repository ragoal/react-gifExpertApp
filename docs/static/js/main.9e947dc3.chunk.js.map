{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,oCACA,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEFN,GAAc,SAAAO,GAAI,OAAGL,GAAH,mBAAiBK,SAM/B,2BACIC,KAAK,OACLC,MAAOP,EACPQ,SAhBa,SAACL,GACtBF,EAAcE,EAAEM,OAAOF,aCPlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKC,UAAU,4CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,0FAE6EO,UAAWF,GAFxF,uBAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAQ,CACJhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAaZY,GAbY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EAEVnB,mBAAS,CAC/ByB,KAAK,GACLO,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAsBpC,OAfAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAMY,EACNL,SAAQ,SAKtB,IAIKC,EDjBwBK,CAAanB,GAAhCU,EAJuB,EAI5BJ,KAAaO,EAJe,EAIfA,QAMpB,OACI,oCACA,wBAAIjB,UAAU,qCAAqCI,GAElDa,GAAW,uBAAGjB,UAAU,oCAAb,WAGZ,yBAAKA,UAAU,aAIPc,EAAOF,KAAI,SAACC,GAAD,OAEX,kBAAC,EAAD,eAAaW,IAAKX,EAAIhB,IACdgB,UEzBXY,EAAe,WAAM,MAKMxC,mBAAS,CAAC,cALhB,mBAKvByC,EALuB,KAKX1C,EALW,KAW9B,OACI,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAIA,4BAII0C,EAAWd,KAAI,SAACR,GAAD,OACf,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCtBhDuB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9e947dc3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // console.log(\"enviado\");\r\n        setCategories(cats=>[inputValue,...cats])\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"   \r\n                value={inputValue} \r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=MRVe4Da01cWC5XMcc3hQYzY7pFshbjtf&q=${ encodeURI (category)  }=&limit=10`\r\n    \r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        })\r\n    })\r\n    return gifs;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n  \r\n   \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        \r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n           \r\n                {\r\n                images.map((img)=>\r\n                (\r\n                <GifGridItem key={img.id}\r\n                    {...img}\r\n                />\r\n                )\r\n                )\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n               \r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n                \r\n                \r\n            })\r\n    },[ ]);\r\n\r\n   \r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    \r\n    // const categories = ['One Punch', 'Samurai x', 'Dragon Ball'];\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories, 'hunterXHunter']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n          <h1>GifExpertApp</h1>\r\n          <AddCategory setCategories = {setCategories}/>\r\n          <hr></hr>  \r\n        \r\n          \r\n          \r\n          <ol>\r\n              \r\n          \r\n          {\r\n              categories.map((category)=>\r\n              <GifGrid key={category} category={category}/>\r\n              )\r\n          }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}